name: Pull and Push Images with Custom Tags
on:
  workflow_dispatch:
    inputs:
      # Source versions
      amf_source_version:
        description: 'Source Version for AMF (e.g., release-0.0.10)'
        required: true
        default: 'release-0.0.10'
      amf_target_version:
        description: 'Target Version for AMF (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'
      
      smf_source_version:
        description: 'Source Version for SMF'
        required: true
        default: 'release-0.0.6'
      smf_target_version:
        description: 'Target Version for SMF'
        required: true
        default: 'v2.0.0'
      
      pcf_source_version:
        description: 'Source Version for PCF'
        required: true
        default: 'release-0.0.4'
      pcf_target_version:
        description: 'Target Version for PCF'
        required: true
        default: 'v1.5.0'
      
      nrf_source_version:
        description: 'Source Version for NRF'
        required: true
        default: 'release-0.0.5'
      nrf_target_version:
        description: 'Target Version for NRF'
        required: true
        default: 'v1.2.0'
      
      udm_source_version:
        description: 'Source Version for UDM'
        required: true
        default: 'release-0.0.4'
      udm_target_version:
        description: 'Target Version for UDM'
        required: true
        default: 'v1.1.0'
jobs:
  pull_and_push_images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Pull and Push Docker Images
        run: |
          # Define associative arrays for source and target versions
          declare -A SOURCE_VERSIONS=(
            ["5gc-amf"]="${{ github.event.inputs.amf_source_version }}"
            ["5gc-smf"]="${{ github.event.inputs.smf_source_version }}"
            ["5gc-pcf"]="${{ github.event.inputs.pcf_source_version }}"
            ["5gc-nrf"]="${{ github.event.inputs.nrf_source_version }}"
            ["5gc-udm"]="${{ github.event.inputs.udm_source_version }}"
            
          )
          
          declare -A TARGET_VERSIONS=(
            ["5gc-amf"]="${{ github.event.inputs.amf_target_version }}"
            ["5gc-smf"]="${{ github.event.inputs.smf_target_version }}"
            ["5gc-pcf"]="${{ github.event.inputs.pcf_target_version }}"
            ["5gc-nrf"]="${{ github.event.inputs.nrf_target_version }}"
            ["5gc-udm"]="${{ github.event.inputs.udm_target_version }}"
            
          )
          
          for PACKAGE in "${!SOURCE_VERSIONS[@]}"; do
            SOURCE_VERSION=${SOURCE_VERSIONS[$PACKAGE]}
            TARGET_VERSION=${TARGET_VERSIONS[$PACKAGE]}
            
            SOURCE_IMAGE="ghcr.io/ios-mcn-core/${PACKAGE}:${SOURCE_VERSION}"
            TARGET_IMAGE="ghcr.io/Test-IOS-MCN-CAZE/${PACKAGE}:${TARGET_VERSION}"
            
            echo "Processing ${PACKAGE}..."
            echo "Pulling ${SOURCE_IMAGE}..."
            docker pull ${SOURCE_IMAGE}
            
            echo "Retagging to ${TARGET_IMAGE}..."
            docker tag ${SOURCE_IMAGE} ${TARGET_IMAGE}
            
            echo "Pushing ${TARGET_IMAGE}..."
            docker push ${TARGET_IMAGE}
            
            echo "Completed processing ${PACKAGE}"
          done
