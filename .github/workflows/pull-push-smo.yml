name: Pull, Retag, and Push Docker Images from ios-mcn-smo

on:
  workflow_dispatch:
    inputs:
      smo_version:
        description: 'Comma-separated versions for the ios-mcn-smo packages'
        required: true
        default: '2.8.1,1.2.0,1.5.0,1.0.1,1.0.0,1.4.0,1.12.3,latest,1.2.0,2.5.0,1.1.1,latest,latest'

jobs:
  pull_and_push_ios_mcn_smo:
    runs-on: ubuntu-latest

    steps:
      # Checkout the current repository (if needed)
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      # Step 1: Pull, Retag, and Push all Images from ios-mcn-smo
      - name: Pull, Retag, and Push all Images from ios-mcn-smo
        run: |
          # Split the versions input into an array
          IFS=',' read -r -a VERSIONS <<< "${{ github.event.inputs.smo_version }}"

          # Define the list of packages for ios-mcn-smo
          SMO_PACKAGES=(
            "nonrtric-plt-a1policymanagementservice"
            "nonrtric-plt-rappcatalogue"
            "nonrtric-plt-informationcoordinatorservice"
            "nonrtric-plt-pmproducer"
            "nonrtric-plt-pmlog"
            "nonrtric-plt-dmaapadapter"
            "ves-collector"
            "pm-file-converter"
            "nonrtric-gateway"
            "nonrtric-controlpanel"
            "nonrtric-plt-auth-token-fetch"
            "sdnc-web-image"
            "sdnc-image"
          )

          # Check if the number of versions matches the number of packages
          if [ "${#VERSIONS[@]}" -ne "${#SMO_PACKAGES[@]}" ]; then
            echo "Error: The number of versions provided (${#VERSIONS[@]}) does not match the number of packages (${#SMO_PACKAGES[@]})."
            exit 1
          fi

          # Convert repository name to lowercase
          TARGET_REPO="ghcr.io/test-ios-mcn-caze/ios_mcn"

          # Loop through each package and version, then pull, retag, and push
          for i in "${!SMO_PACKAGES[@]}"; do
            PACKAGE="${SMO_PACKAGES[$i]}"
            VERSION="${VERSIONS[$i]}"
            SOURCE_IMAGE="ghcr.io/ios-mcn-smo/${PACKAGE}:${VERSION}"
            TARGET_IMAGE="${TARGET_REPO}/${PACKAGE}:${VERSION}"
            echo "Processing ${PACKAGE} with version ${VERSION}..."

            # Pull the source image
            if ! docker pull ${SOURCE_IMAGE}; then
              echo "Warning: Failed to pull ${SOURCE_IMAGE}. Skipping..."
              continue
            fi

            # Retag and push the target image
            docker tag ${SOURCE_IMAGE} ${TARGET_IMAGE}
            docker push ${TARGET_IMAGE}
          done
