name: Simple Maven Package Transfer

on:
  workflow_dispatch:
    inputs:
      group_id:
        description: 'Group ID'
        required: true
        default: 'org.iosmcn'
      artifact_id:
        description: 'Artifact ID'
        required: true
        default: 'pcscf'
      version:
        description: 'Version'
        required: true
        default: '0.0.1'
      packaging:
        description: 'Packaging (jar, war, etc)'
        required: true
        default: 'jar'

jobs:
  transfer:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Configure Maven settings for source repository
      run: |
        mkdir -p ~/.m2
        cat > ~/.m2/settings.xml <<EOF
        <settings>
          <servers>
            <server>
              <id>github-source</id>
              <username>${{ github.actor }}</username>
              <password>${{ secrets.SOURCE_GITHUB_TOKEN }}</password>
            </server>
            <server>
              <id>github-target</id>
              <username>${{ github.actor }}</username>
              <password>${{ secrets.GITHUB_TOKEN }}</password>
            </server>
          </servers>
          <profiles>
            <profile>
              <id>github</id>
              <repositories>
                <repository>
                  <id>github-source</id>
                  <url>https://maven.pkg.github.com/ios-mcn-ims/cscf</url>
                </repository>
              </repositories>
            </profile>
          </profiles>
          <activeProfiles>
            <activeProfile>github</activeProfile>
          </activeProfiles>
        </settings>
        EOF

    - name: Download artifact and POM from source
      run: |
        mkdir -p temp local-repo
        
        echo "üì• Downloading JAR..."
        mvn dependency:copy \
          -Dartifact=${{ github.event.inputs.group_id }}:${{ github.event.inputs.artifact_id }}:${{ github.event.inputs.version }}:${{ github.event.inputs.packaging }} \
          -DoutputDirectory=./temp/ \
          -Dmaven.repo.local=./local-repo \
          -Dmdep.stripVersion=false
        
        echo "üì• Downloading POM (optional)..."
        mvn dependency:copy \
          -Dartifact=${{ github.event.inputs.group_id }}:${{ github.event.inputs.artifact_id }}:${{ github.event.inputs.version }}:pom \
          -DoutputDirectory=./temp/ \
          -Dmaven.repo.local=./local-repo \
          -Dmdep.stripVersion=false || echo "‚ö†Ô∏è No POM found in source, will generate one"
        
        echo "üìÇ Files downloaded to temp/:"
        ls -la ./temp/

    - name: Create isolated Maven settings for deployment
      run: |
        mkdir -p ~/.m2/deploy
        cat > ~/.m2/deploy/settings.xml <<EOF
        <settings>
          <servers>
            <server>
              <id>github-target</id>
              <username>${{ github.actor }}</username>
              <password>${{ secrets.GITHUB_TOKEN }}</password>
            </server>
          </servers>
        </settings>
        EOF

    - name: Upload artifact to target repository
      run: |
        # Detect actual JAR and POM
        ACTUAL_JAR=$(find ./temp -type f -name "${{ github.event.inputs.artifact_id }}*.${{ github.event.inputs.packaging }}" | head -n 1)
        ACTUAL_POM=$(find ./temp -type f -name "${{ github.event.inputs.artifact_id }}*.pom" | head -n 1)

        if [ -z "$ACTUAL_JAR" ]; then
          echo "‚ùå No JAR file found to deploy."
          exit 1
        fi

        echo "üì§ Preparing to upload:"
        echo "   JAR: $ACTUAL_JAR"
        if [ -n "$ACTUAL_POM" ]; then
          echo "   POM: $ACTUAL_POM"
          POM_ARG="-DpomFile=$ACTUAL_POM"
        else
          echo "‚ö†Ô∏è No POM found, will generate one."
          POM_ARG="-DgeneratePom=true"
        fi

        mkdir -p ./deploy-repo

        mvn deploy:deploy-file \
          -DgroupId=${{ github.event.inputs.group_id }} \
          -DartifactId=${{ github.event.inputs.artifact_id }} \
          -Dversion=${{ github.event.inputs.version }} \
          -Dpackaging=${{ github.event.inputs.packaging }} \
          -Dfile="$ACTUAL_JAR" \
          $POM_ARG \
          -DrepositoryId=github-target \
          -Durl=https://maven.pkg.github.com/nivedita-releases/test-openairinterface5g \
          -Dmaven.repo.local=./deploy-repo \
          -s ~/.m2/deploy/settings.xml \
          --batch-mode \
          -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

    - name: Verify upload
      run: |
        echo "‚úÖ Transfer complete!"
        echo "üìã Summary:"
        echo "   Group ID: ${{ github.event.inputs.group_id }}"
        echo "   Artifact ID: ${{ github.event.inputs.artifact_id }}"
        echo "   Version: ${{ github.event.inputs.version }}"
        echo "   Packaging: ${{ github.event.inputs.packaging }}"
        echo "   Target: https://maven.pkg.github.com/nivedita-releases/test-openairinterface5g"
