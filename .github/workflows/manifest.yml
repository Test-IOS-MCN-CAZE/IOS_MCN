name: Compare Docker Image Manifest SHAs from Google Sheets

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  compare-sha:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip jq skopeo
          pip3 install pandas

      - name: Download Google Sheet as CSV
        run: |
          # Download Google Sheet as CSV using the correct URL
          curl -L -o image_sha.csv "https://docs.google.com/spreadsheets/d/1WmqxAyNp6st_l5nN4_LGbpgI5br6ijlI4g3qH3GrlUU/gviz/tq?tqx=out:csv"

      - name: Compare Docker Image SHAs
        run: |
          # Function to fetch Docker image manifest SHA (digest)
          get_manifest_sha() {
              IMAGE=$1
              skopeo inspect docker://$IMAGE | jq -r '.Digest'
          }

          # Read CSV file and compare SHA values
          echo "üîç Comparing Docker image manifest SHAs from Google Sheet..."

          # Debug: Print the CSV contents
          echo "üìÑ CSV content:"
          cat image_sha.csv

          # Iterate over each line in the CSV
          while IFS=, read -r IMAGE_NAME TARGET_SHA SOURCE_SHA; do
              # Skip header row
              if [[ "$IMAGE_NAME" == "Docker Image" ]]; then
                  continue
              fi

              # Debug: Print values being compared
              echo "üîé Comparing: Docker Image: $IMAGE_NAME, Target SHA: $TARGET_SHA, Source SHA: $SOURCE_SHA"

              # Fetch manifest SHAs (digest) from the source and target Docker images
              TARGET_SHA_FROM_REGISTRY=$(get_manifest_sha "$TARGET_SHA")
              SOURCE_SHA_FROM_REGISTRY=$(get_manifest_sha "$SOURCE_SHA")

              echo "Target Docker Image Manifest SHA: $TARGET_SHA_FROM_REGISTRY"
              echo "Source Docker Image Manifest SHA: $SOURCE_SHA_FROM_REGISTRY"

              # Compare SHAs
              if [[ "$TARGET_SHA_FROM_REGISTRY" == "$SOURCE_SHA_FROM_REGISTRY" ]]; then
                  echo "‚úÖ MATCH: $IMAGE_NAME"
              else
                  echo "‚ùå MISMATCH: $IMAGE_NAME"
                  echo "   Target SHA: $TARGET_SHA_FROM_REGISTRY"
                  echo "   Source SHA: $SOURCE_SHA_FROM_REGISTRY"
                  exit 1
              fi
          done < "image_sha.csv"

          echo "‚úÖ SHA comparison completed."
